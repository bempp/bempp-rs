name: ðŸ§ª Test

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main

jobs:
  run-tests-rust:
    name: Run tests (Rust)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-version: ["stable"]
        mpi: ['mpich', 'openmpi']
    steps:
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
          components: rustfmt
      - name: Set up MPI
        uses: mpi4py/setup-mpi@v1
        with:
          mpi: ${{ matrix.mpi }}
      - name: Install cargo-mpirun
        run: cargo install cargo-mpirun
      - uses: actions/checkout@v3
      - name: Install LAPACK & OpenBLAS
        run:
          sudo apt-get install libopenblas-dev liblapack-dev

      - name: Cache Rust build
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: bempp-rs-${{ matrix.rust-version }}

      - name: Style checks
        run: |
          cargo fmt -- --check
          cargo clippy -- -D warnings
          cargo clippy --tests -- -D warnings
          cargo clippy --examples -- -D warnings

      - name: Build rust library
        run: cargo build --features "strict"

      - name: Run unit tests
        run: cargo test --lib --features "strict"
      - name: Run unit tests (release)
        run: cargo test --lib --release --features "strict"
      - name: Run unit tests (with mpi enabled)
        run: cargo test --lib --features "mpi,strict"
      - name: Run unit tests (release with mpi enabled)
        run: cargo test --lib --release --features "mpi,strict"
      - name: Run tests
        run: cargo test --examples --release --features "mpi,strict"
      - name: Run examples
        run: |
          python3 find_examples.py
          chmod +x examples.sh
          ./examples.sh

      - name: Build docs
        run: cargo doc --features "strict" --no-deps

  run-tests-python:
    name: Run tests (Python)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v3
      - name: Install Python requirements
        run: python3 -m pip install pytest-xdist flake8
      - name: Style checks
        run: |
          python3 -m flake8 python/test
      - name: Install tomllib (for Python <3.11)
        run: python3 -m pip install tomli
        if: ${{ matrix.python-version == '3.7' || matrix.python-version == '3.8' || matrix.python-version == '3.9' || matrix.python-version == '3.10' }}
      - run: python3 -m pytest -n=auto python/test
        name: Run tests
