; bempp_kernel::helmholtz_3d::simd_wrapper_evaluate
; Function Attrs: uwtable
define void @bempp_kernel::helmholtz_3d::simd_wrapper_evaluate(i1 noundef zeroext %eval_type, ptr noalias nocapture noundef nonnull readonly align 4 %target.0, i64 noundef %target.1, ptr noalias nocapture noundef nonnull readonly align 4 %sources.0, i64 noundef %sources.1, ptr noalias nocapture noundef nonnull readonly align 4 %charges.0, i64 noundef %charges.1, float noundef %wavenumber, ptr noalias nocapture noundef nonnull align 4 %result.0, i64 noundef %result.1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  tail call void @llvm.experimental.noalias.scope.decl(metadata !2)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !5)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !7)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !9)
  %_9.i.i = icmp ugt i64 %charges.1, %sources.1
  br i1 %_9.i.i, label %bb3.i.i, label %"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index.exit.i"

bb3.i.i:                                          ; preds = %start
; call core::slice::index::slice_end_index_len_fail
  tail call void @core::slice::index::slice_end_index_len_fail(i64 noundef %charges.1, i64 noundef %sources.1, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_11e2214d0c6d171ff1470876e352c274) #5, !noalias !11
  unreachable

"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index.exit.i": ; preds = %start
  %_16.i = shl i64 %charges.1, 1
  %_3.i.i = icmp slt i64 %charges.1, 0
  br i1 %_3.i.i, label %bb1.i.i, label %bb2.i.i

bb2.i.i:                                          ; preds = %"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index.exit.i"
  %_9.i44.i = icmp ugt i64 %_16.i, %sources.1
  br i1 %_9.i44.i, label %bb3.i45.i, label %"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index.exit46.i"

bb1.i.i:                                          ; preds = %"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index.exit.i"
; call core::slice::index::slice_index_order_fail
  tail call void @core::slice::index::slice_index_order_fail(i64 noundef %charges.1, i64 noundef %_16.i, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_f5add20e75aff766eeadecb430aa04f2) #5, !noalias !14
  unreachable

bb3.i45.i:                                        ; preds = %bb2.i.i
; call core::slice::index::slice_end_index_len_fail
  tail call void @core::slice::index::slice_end_index_len_fail(i64 noundef %_16.i, i64 noundef %sources.1, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_f5add20e75aff766eeadecb430aa04f2) #5, !noalias !14
  unreachable

"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index.exit46.i": ; preds = %bb2.i.i
  %data.i.i = getelementptr inbounds float, ptr %sources.0, i64 %charges.1
  %_20.i = mul i64 %charges.1, 3
  %_3.i47.i = icmp ugt i64 %_16.i, %_20.i
  br i1 %_3.i47.i, label %bb1.i53.i, label %bb2.i48.i

bb2.i48.i:                                        ; preds = %"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index.exit46.i"
  %_9.i49.i = icmp ugt i64 %_20.i, %sources.1
  br i1 %_9.i49.i, label %bb3.i52.i, label %"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index.exit54.i"

bb1.i53.i:                                        ; preds = %"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index.exit46.i"
; call core::slice::index::slice_index_order_fail
  tail call void @core::slice::index::slice_index_order_fail(i64 noundef %_16.i, i64 noundef %_20.i, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_932fad1efa0bb95ab9115d0e1b004d76) #5, !noalias !17
  unreachable

bb3.i52.i:                                        ; preds = %bb2.i48.i
; call core::slice::index::slice_end_index_len_fail
  tail call void @core::slice::index::slice_end_index_len_fail(i64 noundef %_20.i, i64 noundef %sources.1, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_932fad1efa0bb95ab9115d0e1b004d76) #5, !noalias !17
  unreachable

"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index.exit54.i": ; preds = %bb2.i48.i
  %data.i51.i = getelementptr inbounds float, ptr %sources.0, i64 %_16.i
  %_266161.not.i = icmp eq i64 %charges.1, 0
  br i1 %eval_type, label %bb65.preheader.i, label %bb9.preheader.i

bb9.preheader.i:                                  ; preds = %"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index.exit54.i"
  br i1 %_266161.not.i, label %bb11.i, label %bb12.lr.ph.i

bb12.lr.ph.i:                                     ; preds = %bb9.preheader.i
  %0 = getelementptr inbounds [0 x float], ptr %target.0, i64 0, i64 1
  %1 = getelementptr inbounds [0 x float], ptr %target.0, i64 0, i64 2
  switch i64 %target.1, label %bb12.lr.ph.split.split.i [
    i64 0, label %panic10.i
    i64 1, label %panic12.i
  ], !prof !20

bb12.lr.ph.split.split.i:                         ; preds = %bb12.lr.ph.i
  %_54.i = icmp ugt i64 %target.1, 2
  br i1 %_54.i, label %bb12.lr.ph.split.split.split.i, label %panic14.i, !prof !21

bb12.lr.ph.split.split.split.i:                   ; preds = %bb12.lr.ph.split.split.i
  %_38.i = load float, ptr %target.0, align 4, !alias.scope !2, !noalias !22, !noundef !23
  %_45.i = load float, ptr %0, align 4, !alias.scope !2, !noalias !22, !noundef !23
  %_52.i = load float, ptr %1, align 4, !alias.scope !2, !noalias !22, !noundef !23
  %min.iters.check = icmp ult i64 %charges.1, 16
  br i1 %min.iters.check, label %bb12.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %bb12.lr.ph.split.split.split.i
  %n.vec = and i64 %charges.1, -16
  %broadcast.splatinsert = insertelement <4 x float> poison, float %_38.i, i64 0
  %broadcast.splat = shufflevector <4 x float> %broadcast.splatinsert, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert41 = insertelement <4 x float> poison, float %_38.i, i64 0
  %broadcast.splat42 = shufflevector <4 x float> %broadcast.splatinsert41, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert43 = insertelement <4 x float> poison, float %_38.i, i64 0
  %broadcast.splat44 = shufflevector <4 x float> %broadcast.splatinsert43, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert45 = insertelement <4 x float> poison, float %_38.i, i64 0
  %broadcast.splat46 = shufflevector <4 x float> %broadcast.splatinsert45, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert51 = insertelement <4 x float> poison, float %_45.i, i64 0
  %broadcast.splat52 = shufflevector <4 x float> %broadcast.splatinsert51, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert53 = insertelement <4 x float> poison, float %_45.i, i64 0
  %broadcast.splat54 = shufflevector <4 x float> %broadcast.splatinsert53, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert55 = insertelement <4 x float> poison, float %_45.i, i64 0
  %broadcast.splat56 = shufflevector <4 x float> %broadcast.splatinsert55, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert57 = insertelement <4 x float> poison, float %_45.i, i64 0
  %broadcast.splat58 = shufflevector <4 x float> %broadcast.splatinsert57, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert63 = insertelement <4 x float> poison, float %_52.i, i64 0
  %broadcast.splat64 = shufflevector <4 x float> %broadcast.splatinsert63, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert65 = insertelement <4 x float> poison, float %_52.i, i64 0
  %broadcast.splat66 = shufflevector <4 x float> %broadcast.splatinsert65, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert67 = insertelement <4 x float> poison, float %_52.i, i64 0
  %broadcast.splat68 = shufflevector <4 x float> %broadcast.splatinsert67, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert69 = insertelement <4 x float> poison, float %_52.i, i64 0
  %broadcast.splat70 = shufflevector <4 x float> %broadcast.splatinsert69, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert71 = insertelement <4 x float> poison, float %wavenumber, i64 0
  %broadcast.splat72 = shufflevector <4 x float> %broadcast.splatinsert71, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert73 = insertelement <4 x float> poison, float %wavenumber, i64 0
  %broadcast.splat74 = shufflevector <4 x float> %broadcast.splatinsert73, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert75 = insertelement <4 x float> poison, float %wavenumber, i64 0
  %broadcast.splat76 = shufflevector <4 x float> %broadcast.splatinsert75, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert77 = insertelement <4 x float> poison, float %wavenumber, i64 0
  %broadcast.splat78 = shufflevector <4 x float> %broadcast.splatinsert77, <4 x float> poison, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi float [ 0.000000e+00, %vector.ph ], [ %116, %vector.body ]
  %vec.phi37 = phi float [ 0.000000e+00, %vector.ph ], [ %120, %vector.body ]
  %2 = or i64 %index, 4
  %3 = or i64 %index, 8
  %4 = or i64 %index, 12
  %5 = getelementptr inbounds [0 x float], ptr %sources.0, i64 0, i64 %index
  %wide.load = load <4 x float>, ptr %5, align 4, !alias.scope !5, !noalias !24
  %6 = getelementptr inbounds float, ptr %5, i64 4
  %wide.load38 = load <4 x float>, ptr %6, align 4, !alias.scope !5, !noalias !24
  %7 = getelementptr inbounds float, ptr %5, i64 8
  %wide.load39 = load <4 x float>, ptr %7, align 4, !alias.scope !5, !noalias !24
  %8 = getelementptr inbounds float, ptr %5, i64 12
  %wide.load40 = load <4 x float>, ptr %8, align 4, !alias.scope !5, !noalias !24
  %9 = fsub <4 x float> %wide.load, %broadcast.splat
  %10 = fsub <4 x float> %wide.load38, %broadcast.splat42
  %11 = fsub <4 x float> %wide.load39, %broadcast.splat44
  %12 = fsub <4 x float> %wide.load40, %broadcast.splat46
  %13 = getelementptr inbounds [0 x float], ptr %data.i.i, i64 0, i64 %index
  %wide.load47 = load <4 x float>, ptr %13, align 4, !alias.scope !5, !noalias !24
  %14 = getelementptr inbounds float, ptr %13, i64 4
  %wide.load48 = load <4 x float>, ptr %14, align 4, !alias.scope !5, !noalias !24
  %15 = getelementptr inbounds float, ptr %13, i64 8
  %wide.load49 = load <4 x float>, ptr %15, align 4, !alias.scope !5, !noalias !24
  %16 = getelementptr inbounds float, ptr %13, i64 12
  %wide.load50 = load <4 x float>, ptr %16, align 4, !alias.scope !5, !noalias !24
  %17 = fsub <4 x float> %wide.load47, %broadcast.splat52
  %18 = fsub <4 x float> %wide.load48, %broadcast.splat54
  %19 = fsub <4 x float> %wide.load49, %broadcast.splat56
  %20 = fsub <4 x float> %wide.load50, %broadcast.splat58
  %21 = getelementptr inbounds [0 x float], ptr %data.i51.i, i64 0, i64 %index
  %wide.load59 = load <4 x float>, ptr %21, align 4, !alias.scope !5, !noalias !24
  %22 = getelementptr inbounds float, ptr %21, i64 4
  %wide.load60 = load <4 x float>, ptr %22, align 4, !alias.scope !5, !noalias !24
  %23 = getelementptr inbounds float, ptr %21, i64 8
  %wide.load61 = load <4 x float>, ptr %23, align 4, !alias.scope !5, !noalias !24
  %24 = getelementptr inbounds float, ptr %21, i64 12
  %wide.load62 = load <4 x float>, ptr %24, align 4, !alias.scope !5, !noalias !24
  %25 = fsub <4 x float> %wide.load59, %broadcast.splat64
  %26 = fsub <4 x float> %wide.load60, %broadcast.splat66
  %27 = fsub <4 x float> %wide.load61, %broadcast.splat68
  %28 = fsub <4 x float> %wide.load62, %broadcast.splat70
  %29 = fmul <4 x float> %9, %9
  %30 = fmul <4 x float> %10, %10
  %31 = fmul <4 x float> %11, %11
  %32 = fmul <4 x float> %12, %12
  %33 = fmul <4 x float> %17, %17
  %34 = fmul <4 x float> %18, %18
  %35 = fmul <4 x float> %19, %19
  %36 = fmul <4 x float> %20, %20
  %37 = fadd <4 x float> %29, %33
  %38 = fadd <4 x float> %30, %34
  %39 = fadd <4 x float> %31, %35
  %40 = fadd <4 x float> %32, %36
  %41 = fmul <4 x float> %25, %25
  %42 = fmul <4 x float> %26, %26
  %43 = fmul <4 x float> %27, %27
  %44 = fmul <4 x float> %28, %28
  %45 = fadd <4 x float> %37, %41
  %46 = fadd <4 x float> %38, %42
  %47 = fadd <4 x float> %39, %43
  %48 = fadd <4 x float> %40, %44
  %49 = tail call <4 x float> @llvm.sqrt.v4f32(<4 x float> %45)
  %50 = tail call <4 x float> @llvm.sqrt.v4f32(<4 x float> %46)
  %51 = tail call <4 x float> @llvm.sqrt.v4f32(<4 x float> %47)
  %52 = tail call <4 x float> @llvm.sqrt.v4f32(<4 x float> %48)
  %53 = fcmp oeq <4 x float> %49, zeroinitializer
  %54 = fcmp oeq <4 x float> %50, zeroinitializer
  %55 = fcmp oeq <4 x float> %51, zeroinitializer
  %56 = fcmp oeq <4 x float> %52, zeroinitializer
  %57 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %49
  %58 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %50
  %59 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %51
  %60 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %52
  %61 = select <4 x i1> %53, <4 x float> zeroinitializer, <4 x float> %57
  %62 = select <4 x i1> %54, <4 x float> zeroinitializer, <4 x float> %58
  %63 = select <4 x i1> %55, <4 x float> zeroinitializer, <4 x float> %59
  %64 = select <4 x i1> %56, <4 x float> zeroinitializer, <4 x float> %60
  %65 = fmul <4 x float> %49, %broadcast.splat72
  %66 = fmul <4 x float> %50, %broadcast.splat74
  %67 = fmul <4 x float> %51, %broadcast.splat76
  %68 = fmul <4 x float> %52, %broadcast.splat78
  %69 = tail call <4 x float> @llvm.cos.v4f32(<4 x float> %65)
  %70 = tail call <4 x float> @llvm.cos.v4f32(<4 x float> %66)
  %71 = tail call <4 x float> @llvm.cos.v4f32(<4 x float> %67)
  %72 = tail call <4 x float> @llvm.cos.v4f32(<4 x float> %68)
  %73 = fmul <4 x float> %69, %61
  %74 = fmul <4 x float> %70, %62
  %75 = fmul <4 x float> %71, %63
  %76 = fmul <4 x float> %72, %64
  %77 = tail call <4 x float> @llvm.sin.v4f32(<4 x float> %65)
  %78 = tail call <4 x float> @llvm.sin.v4f32(<4 x float> %66)
  %79 = tail call <4 x float> @llvm.sin.v4f32(<4 x float> %67)
  %80 = tail call <4 x float> @llvm.sin.v4f32(<4 x float> %68)
  %81 = fmul <4 x float> %77, %61
  %82 = fmul <4 x float> %78, %62
  %83 = fmul <4 x float> %79, %63
  %84 = fmul <4 x float> %80, %64
  %85 = getelementptr inbounds [0 x { float, float }], ptr %charges.0, i64 0, i64 %index
  %86 = getelementptr inbounds [0 x { float, float }], ptr %charges.0, i64 0, i64 %2
  %87 = getelementptr inbounds [0 x { float, float }], ptr %charges.0, i64 0, i64 %3
  %88 = getelementptr inbounds [0 x { float, float }], ptr %charges.0, i64 0, i64 %4
  %wide.vec = load <8 x float>, ptr %85, align 4, !alias.scope !7, !noalias !25
  %wide.vec79 = load <8 x float>, ptr %86, align 4, !alias.scope !7, !noalias !25
  %wide.vec80 = load <8 x float>, ptr %87, align 4, !alias.scope !7, !noalias !25
  %wide.vec81 = load <8 x float>, ptr %88, align 4, !alias.scope !7, !noalias !25
  %strided.vec = shufflevector <8 x float> %wide.vec, <8 x float> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec82 = shufflevector <8 x float> %wide.vec79, <8 x float> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec83 = shufflevector <8 x float> %wide.vec80, <8 x float> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec84 = shufflevector <8 x float> %wide.vec81, <8 x float> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec85 = shufflevector <8 x float> %wide.vec, <8 x float> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %strided.vec86 = shufflevector <8 x float> %wide.vec79, <8 x float> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %strided.vec87 = shufflevector <8 x float> %wide.vec80, <8 x float> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %strided.vec88 = shufflevector <8 x float> %wide.vec81, <8 x float> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %89 = fmul <4 x float> %strided.vec85, %73
  %90 = fmul <4 x float> %strided.vec86, %74
  %91 = fmul <4 x float> %strided.vec87, %75
  %92 = fmul <4 x float> %strided.vec88, %76
  %93 = fmul <4 x float> %strided.vec, %81
  %94 = fmul <4 x float> %strided.vec82, %82
  %95 = fmul <4 x float> %strided.vec83, %83
  %96 = fmul <4 x float> %strided.vec84, %84
  %97 = fadd <4 x float> %89, %93
  %98 = fadd <4 x float> %90, %94
  %99 = fadd <4 x float> %91, %95
  %100 = fadd <4 x float> %92, %96
  %101 = fmul <4 x float> %strided.vec, %73
  %102 = fmul <4 x float> %strided.vec82, %74
  %103 = fmul <4 x float> %strided.vec83, %75
  %104 = fmul <4 x float> %strided.vec84, %76
  %105 = fmul <4 x float> %strided.vec85, %81
  %106 = fmul <4 x float> %strided.vec86, %82
  %107 = fmul <4 x float> %strided.vec87, %83
  %108 = fmul <4 x float> %strided.vec88, %84
  %109 = fsub <4 x float> %101, %105
  %110 = fsub <4 x float> %102, %106
  %111 = fsub <4 x float> %103, %107
  %112 = fsub <4 x float> %104, %108
  %113 = tail call float @llvm.vector.reduce.fadd.v4f32(float %vec.phi, <4 x float> %97)
  %114 = tail call float @llvm.vector.reduce.fadd.v4f32(float %113, <4 x float> %98)
  %115 = tail call float @llvm.vector.reduce.fadd.v4f32(float %114, <4 x float> %99)
  %116 = tail call float @llvm.vector.reduce.fadd.v4f32(float %115, <4 x float> %100)
  %117 = tail call float @llvm.vector.reduce.fadd.v4f32(float %vec.phi37, <4 x float> %109)
  %118 = tail call float @llvm.vector.reduce.fadd.v4f32(float %117, <4 x float> %110)
  %119 = tail call float @llvm.vector.reduce.fadd.v4f32(float %118, <4 x float> %111)
  %120 = tail call float @llvm.vector.reduce.fadd.v4f32(float %119, <4 x float> %112)
  %index.next = add nuw i64 %index, 16
  %121 = icmp eq i64 %index.next, %n.vec
  br i1 %121, label %middle.block, label %vector.body, !llvm.loop !26

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %charges.1
  br i1 %cmp.n, label %bb11.loopexit.i, label %bb12.i.preheader

bb12.i.preheader:                                 ; preds = %bb12.lr.ph.split.split.split.i, %middle.block
  %iter.sroa.0.0159.i.ph = phi i64 [ 0, %bb12.lr.ph.split.split.split.i ], [ %n.vec, %middle.block ]
  %my_result_real.0158.i.ph = phi float [ 0.000000e+00, %bb12.lr.ph.split.split.split.i ], [ %116, %middle.block ]
  %my_result_imag.0157.i.ph = phi float [ 0.000000e+00, %bb12.lr.ph.split.split.split.i ], [ %120, %middle.block ]
  br label %bb12.i

bb65.preheader.i:                                 ; preds = %"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index.exit54.i"
  br i1 %_266161.not.i, label %bb67.i, label %bb68.lr.ph.i

bb68.lr.ph.i:                                     ; preds = %bb65.preheader.i
  %122 = getelementptr inbounds [0 x float], ptr %target.0, i64 0, i64 1
  %123 = getelementptr inbounds [0 x float], ptr %target.0, i64 0, i64 2
  switch i64 %target.1, label %bb68.lr.ph.split.split.i [
    i64 0, label %panic25.i
    i64 1, label %panic27.i
  ], !prof !20

bb68.lr.ph.split.split.i:                         ; preds = %bb68.lr.ph.i
  %_144.i = icmp ugt i64 %target.1, 2
  br i1 %_144.i, label %bb68.lr.ph.split.split.split.i, label %panic29.i, !prof !21

bb68.lr.ph.split.split.split.i:                   ; preds = %bb68.lr.ph.split.split.i
  %_128.i = load float, ptr %target.0, align 4, !alias.scope !2, !noalias !22, !noundef !23
  %_135.i = load float, ptr %122, align 4, !alias.scope !2, !noalias !22, !noundef !23
  %_142.i = load float, ptr %123, align 4, !alias.scope !2, !noalias !22, !noundef !23
  %min.iters.check92 = icmp ult i64 %charges.1, 4
  br i1 %min.iters.check92, label %bb68.i.preheader, label %vector.ph93

vector.ph93:                                      ; preds = %bb68.lr.ph.split.split.split.i
  %n.vec95 = and i64 %charges.1, -4
  %broadcast.splatinsert109 = insertelement <4 x float> poison, float %_128.i, i64 0
  %broadcast.splat110 = shufflevector <4 x float> %broadcast.splatinsert109, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert112 = insertelement <4 x float> poison, float %_135.i, i64 0
  %broadcast.splat113 = shufflevector <4 x float> %broadcast.splatinsert112, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert115 = insertelement <4 x float> poison, float %_142.i, i64 0
  %broadcast.splat116 = shufflevector <4 x float> %broadcast.splatinsert115, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert117 = insertelement <4 x float> poison, float %wavenumber, i64 0
  %broadcast.splat118 = shufflevector <4 x float> %broadcast.splatinsert117, <4 x float> poison, <4 x i32> zeroinitializer
  br label %vector.body98

vector.body98:                                    ; preds = %vector.body98, %vector.ph93
  %index99 = phi i64 [ 0, %vector.ph93 ], [ %index.next122, %vector.body98 ]
  %vec.phi100 = phi float [ 0.000000e+00, %vector.ph93 ], [ %172, %vector.body98 ]
  %vec.phi101 = phi float [ 0.000000e+00, %vector.ph93 ], [ %173, %vector.body98 ]
  %vec.phi102 = phi float [ 0.000000e+00, %vector.ph93 ], [ %174, %vector.body98 ]
  %vec.phi103 = phi float [ 0.000000e+00, %vector.ph93 ], [ %175, %vector.body98 ]
  %vec.phi104 = phi float [ 0.000000e+00, %vector.ph93 ], [ %176, %vector.body98 ]
  %vec.phi105 = phi float [ 0.000000e+00, %vector.ph93 ], [ %177, %vector.body98 ]
  %vec.phi106 = phi float [ 0.000000e+00, %vector.ph93 ], [ %178, %vector.body98 ]
  %vec.phi107 = phi float [ 0.000000e+00, %vector.ph93 ], [ %179, %vector.body98 ]
  %124 = getelementptr inbounds [0 x float], ptr %sources.0, i64 0, i64 %index99
  %wide.load108 = load <4 x float>, ptr %124, align 4, !alias.scope !5, !noalias !24
  %125 = fsub <4 x float> %wide.load108, %broadcast.splat110
  %126 = getelementptr inbounds [0 x float], ptr %data.i.i, i64 0, i64 %index99
  %wide.load111 = load <4 x float>, ptr %126, align 4, !alias.scope !5, !noalias !24
  %127 = fsub <4 x float> %wide.load111, %broadcast.splat113
  %128 = getelementptr inbounds [0 x float], ptr %data.i51.i, i64 0, i64 %index99
  %wide.load114 = load <4 x float>, ptr %128, align 4, !alias.scope !5, !noalias !24
  %129 = fsub <4 x float> %wide.load114, %broadcast.splat116
  %130 = fmul <4 x float> %125, %125
  %131 = fmul <4 x float> %127, %127
  %132 = fadd <4 x float> %130, %131
  %133 = fmul <4 x float> %129, %129
  %134 = fadd <4 x float> %132, %133
  %135 = tail call <4 x float> @llvm.sqrt.v4f32(<4 x float> %134)
  %136 = fcmp oeq <4 x float> %135, zeroinitializer
  %137 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %135
  %138 = select <4 x i1> %136, <4 x float> zeroinitializer, <4 x float> %137
  %139 = fmul <4 x float> %138, %138
  %140 = fmul <4 x float> %135, %broadcast.splat118
  %141 = tail call <4 x float> @llvm.cos.v4f32(<4 x float> %140)
  %142 = fmul <4 x float> %141, %138
  %143 = fmul <4 x float> %142, <float 0x3FB45F3060000000, float 0x3FB45F3060000000, float 0x3FB45F3060000000, float 0x3FB45F3060000000>
  %144 = tail call <4 x float> @llvm.sin.v4f32(<4 x float> %140)
  %145 = fmul <4 x float> %144, %138
  %146 = fmul <4 x float> %145, <float 0x3FB45F3060000000, float 0x3FB45F3060000000, float 0x3FB45F3060000000, float 0x3FB45F3060000000>
  %147 = fmul <4 x float> %140, %143
  %148 = fsub <4 x float> %146, %147
  %149 = fmul <4 x float> %139, %148
  %150 = fmul <4 x float> %140, %146
  %151 = fadd <4 x float> %143, %150
  %152 = fmul <4 x float> %139, %151
  %153 = getelementptr inbounds [0 x { float, float }], ptr %charges.0, i64 0, i64 %index99
  %wide.vec119 = load <8 x float>, ptr %153, align 4, !alias.scope !7, !noalias !25
  %strided.vec120 = shufflevector <8 x float> %wide.vec119, <8 x float> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec121 = shufflevector <8 x float> %wide.vec119, <8 x float> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %154 = fmul <4 x float> %strided.vec121, %143
  %155 = fmul <4 x float> %strided.vec120, %146
  %156 = fadd <4 x float> %154, %155
  %157 = fmul <4 x float> %strided.vec120, %143
  %158 = fmul <4 x float> %strided.vec121, %146
  %159 = fsub <4 x float> %157, %158
  %160 = fmul <4 x float> %strided.vec121, %149
  %161 = fmul <4 x float> %strided.vec120, %152
  %162 = fadd <4 x float> %160, %161
  %163 = fmul <4 x float> %strided.vec120, %149
  %164 = fmul <4 x float> %strided.vec121, %152
  %165 = fsub <4 x float> %163, %164
  %166 = fmul <4 x float> %125, %162
  %167 = fmul <4 x float> %125, %165
  %168 = fmul <4 x float> %127, %162
  %169 = fmul <4 x float> %127, %165
  %170 = fmul <4 x float> %129, %162
  %171 = fmul <4 x float> %129, %165
  %172 = tail call float @llvm.vector.reduce.fadd.v4f32(float %vec.phi100, <4 x float> %171)
  %173 = tail call float @llvm.vector.reduce.fadd.v4f32(float %vec.phi101, <4 x float> %169)
  %174 = tail call float @llvm.vector.reduce.fadd.v4f32(float %vec.phi102, <4 x float> %156)
  %175 = tail call float @llvm.vector.reduce.fadd.v4f32(float %vec.phi103, <4 x float> %166)
  %176 = tail call float @llvm.vector.reduce.fadd.v4f32(float %vec.phi104, <4 x float> %168)
  %177 = tail call float @llvm.vector.reduce.fadd.v4f32(float %vec.phi105, <4 x float> %170)
  %178 = tail call float @llvm.vector.reduce.fadd.v4f32(float %vec.phi106, <4 x float> %159)
  %179 = tail call float @llvm.vector.reduce.fadd.v4f32(float %vec.phi107, <4 x float> %167)
  %index.next122 = add nuw i64 %index99, 4
  %180 = icmp eq i64 %index.next122, %n.vec95
  br i1 %180, label %middle.block90, label %vector.body98, !llvm.loop !29

middle.block90:                                   ; preds = %vector.body98
  %cmp.n97 = icmp eq i64 %n.vec95, %charges.1
  br i1 %cmp.n97, label %bb67.i, label %bb68.i.preheader

bb68.i.preheader:                                 ; preds = %bb68.lr.ph.split.split.split.i, %middle.block90
  %iter5.sroa.0.0170.i.ph = phi i64 [ 0, %bb68.lr.ph.split.split.split.i ], [ %n.vec95, %middle.block90 ]
  %my_result3_imag.0169.i.ph = phi float [ 0.000000e+00, %bb68.lr.ph.split.split.split.i ], [ %172, %middle.block90 ]
  %my_result2_imag.0168.i.ph = phi float [ 0.000000e+00, %bb68.lr.ph.split.split.split.i ], [ %173, %middle.block90 ]
  %my_result0_real.0167.i.ph = phi float [ 0.000000e+00, %bb68.lr.ph.split.split.split.i ], [ %174, %middle.block90 ]
  %my_result1_real.0166.i.ph = phi float [ 0.000000e+00, %bb68.lr.ph.split.split.split.i ], [ %175, %middle.block90 ]
  %my_result2_real.0165.i.ph = phi float [ 0.000000e+00, %bb68.lr.ph.split.split.split.i ], [ %176, %middle.block90 ]
  %my_result3_real.0164.i.ph = phi float [ 0.000000e+00, %bb68.lr.ph.split.split.split.i ], [ %177, %middle.block90 ]
  %my_result0_imag.0163.i.ph = phi float [ 0.000000e+00, %bb68.lr.ph.split.split.split.i ], [ %178, %middle.block90 ]
  %my_result1_imag.0162.i.ph = phi float [ 0.000000e+00, %bb68.lr.ph.split.split.split.i ], [ %179, %middle.block90 ]
  br label %bb68.i

bb11.loopexit.i:                                  ; preds = %bb12.i, %middle.block
  %.lcssa36 = phi float [ %116, %middle.block ], [ %192, %bb12.i ]
  %.lcssa35 = phi float [ %120, %middle.block ], [ %193, %bb12.i ]
  %181 = fmul float %.lcssa36, 0x3FB45F3060000000
  %182 = fmul float %.lcssa35, 0x3FB45F3060000000
  br label %bb11.i

bb11.i:                                           ; preds = %bb11.loopexit.i, %bb9.preheader.i
  %my_result_imag.0.lcssa.i = phi float [ 0.000000e+00, %bb9.preheader.i ], [ %182, %bb11.loopexit.i ]
  %my_result_real.0.lcssa.i = phi float [ 0.000000e+00, %bb9.preheader.i ], [ %181, %bb11.loopexit.i ]
  %_101.not.i = icmp eq i64 %result.1, 0
  br i1 %_101.not.i, label %panic.i, label %bb49.i, !prof !30

bb49.i:                                           ; preds = %bb11.i
  %183 = load float, ptr %result.0, align 4, !alias.scope !31, !noalias !36, !noundef !23
  %184 = fadd float %my_result_real.0.lcssa.i, %183
  store float %184, ptr %result.0, align 4, !alias.scope !31, !noalias !36
  %_7.i.i = getelementptr inbounds { float, float }, ptr %result.0, i64 0, i32 1
  br label %bempp_kernel::helmholtz_3d::evaluate_helmholtz_one_target.exit

panic.i:                                          ; preds = %bb11.i
; call core::panicking::panic_bounds_check
  tail call void @core::panicking::panic_bounds_check(i64 noundef 0, i64 noundef 0, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_6bb88a947014a3abd9a665d2daac6ae1) #5, !noalias !37
  unreachable

bb12.i:                                           ; preds = %bb12.i.preheader, %bb12.i
  %iter.sroa.0.0159.i = phi i64 [ %_0.i.i, %bb12.i ], [ %iter.sroa.0.0159.i.ph, %bb12.i.preheader ]
  %my_result_real.0158.i = phi float [ %192, %bb12.i ], [ %my_result_real.0158.i.ph, %bb12.i.preheader ]
  %my_result_imag.0157.i = phi float [ %193, %bb12.i ], [ %my_result_imag.0157.i.ph, %bb12.i.preheader ]
  %_0.i.i = add nuw nsw i64 %iter.sroa.0.0159.i, 1
  %185 = getelementptr inbounds [0 x float], ptr %sources.0, i64 0, i64 %iter.sroa.0.0159.i
  %_35.i = load float, ptr %185, align 4, !alias.scope !5, !noalias !24, !noundef !23
  %_0.i55.i = fsub float %_35.i, %_38.i
  %186 = getelementptr inbounds [0 x float], ptr %data.i.i, i64 0, i64 %iter.sroa.0.0159.i
  %_42.i = load float, ptr %186, align 4, !alias.scope !5, !noalias !24, !noundef !23
  %_0.i56.i = fsub float %_42.i, %_45.i
  %187 = getelementptr inbounds [0 x float], ptr %data.i51.i, i64 0, i64 %iter.sroa.0.0159.i
  %_49.i = load float, ptr %187, align 4, !alias.scope !5, !noalias !24, !noundef !23
  %_0.i57.i = fsub float %_49.i, %_52.i
  %_0.i58.i = fmul float %_0.i55.i, %_0.i55.i
  %_0.i59.i = fmul float %_0.i56.i, %_0.i56.i
  %_0.i60.i = fadd float %_0.i58.i, %_0.i59.i
  %_0.i61.i = fmul float %_0.i57.i, %_0.i57.i
  %_0.i62.i = fadd float %_0.i60.i, %_0.i61.i
  %188 = tail call float @llvm.sqrt.f32(float %_0.i62.i)
  %_0.i63.i = fcmp oeq float %188, 0.000000e+00
  %_0.i64.i = fdiv float 1.000000e+00, %188
  %inv_diff_norm.0.i = select i1 %_0.i63.i, float 0.000000e+00, float %_0.i64.i
  %_0.i65.i = fmul float %188, %wavenumber
  %189 = tail call float @llvm.cos.f32(float %_0.i65.i)
  %_0.i66.i = fmul float %189, %inv_diff_norm.0.i
  %190 = tail call float @llvm.sin.f32(float %_0.i65.i)
  %_0.i67.i = fmul float %190, %inv_diff_norm.0.i
  %_81.i = getelementptr inbounds [0 x { float, float }], ptr %charges.0, i64 0, i64 %iter.sroa.0.0159.i
  %_81.val.i = load float, ptr %_81.i, align 4, !alias.scope !7, !noalias !25, !noundef !23
  %191 = getelementptr i8, ptr %_81.i, i64 4
  %_81.val43.i = load float, ptr %191, align 4, !alias.scope !7, !noalias !25, !noundef !23
  %_0.i68.i = fmul float %_81.val43.i, %_0.i66.i
  %_0.i69.i = fmul float %_81.val.i, %_0.i67.i
  %_0.i70.i = fadd float %_0.i68.i, %_0.i69.i
  %192 = fadd float %my_result_real.0158.i, %_0.i70.i
  %_0.i71.i = fmul float %_81.val.i, %_0.i66.i
  %_0.i72.i = fmul float %_81.val43.i, %_0.i67.i
  %_0.i73.i = fsub float %_0.i71.i, %_0.i72.i
  %193 = fadd float %my_result_imag.0157.i, %_0.i73.i
  %exitcond.not.i = icmp eq i64 %_0.i.i, %charges.1
  br i1 %exitcond.not.i, label %bb11.loopexit.i, label %bb12.i, !llvm.loop !38

panic10.i:                                        ; preds = %bb12.lr.ph.i
; call core::panicking::panic_bounds_check
  tail call void @core::panicking::panic_bounds_check(i64 noundef 0, i64 noundef 0, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_03952dd3f2d4ab460fe7a86af5d62084) #5, !noalias !37
  unreachable

panic12.i:                                        ; preds = %bb12.lr.ph.i
; call core::panicking::panic_bounds_check
  tail call void @core::panicking::panic_bounds_check(i64 noundef 1, i64 noundef 1, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_20c4e9a2f4ed6f7a30d8d0deed0135f0) #5, !noalias !37
  unreachable

panic14.i:                                        ; preds = %bb12.lr.ph.split.split.i
; call core::panicking::panic_bounds_check
  tail call void @core::panicking::panic_bounds_check(i64 noundef 2, i64 noundef 2, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_0587ce6c9d34f197949694b31d149ada) #5, !noalias !37
  unreachable

bb67.i:                                           ; preds = %bb68.i, %middle.block90, %bb65.preheader.i
  %my_result1_imag.0.lcssa.i = phi float [ 0.000000e+00, %bb65.preheader.i ], [ %179, %middle.block90 ], [ %218, %bb68.i ]
  %my_result0_imag.0.lcssa.i = phi float [ 0.000000e+00, %bb65.preheader.i ], [ %178, %middle.block90 ], [ %216, %bb68.i ]
  %my_result3_real.0.lcssa.i = phi float [ 0.000000e+00, %bb65.preheader.i ], [ %177, %middle.block90 ], [ %221, %bb68.i ]
  %my_result2_real.0.lcssa.i = phi float [ 0.000000e+00, %bb65.preheader.i ], [ %176, %middle.block90 ], [ %219, %bb68.i ]
  %my_result1_real.0.lcssa.i = phi float [ 0.000000e+00, %bb65.preheader.i ], [ %175, %middle.block90 ], [ %217, %bb68.i ]
  %my_result0_real.0.lcssa.i = phi float [ 0.000000e+00, %bb65.preheader.i ], [ %174, %middle.block90 ], [ %215, %bb68.i ]
  %my_result2_imag.0.lcssa.i = phi float [ 0.000000e+00, %bb65.preheader.i ], [ %173, %middle.block90 ], [ %220, %bb68.i ]
  %my_result3_imag.0.lcssa.i = phi float [ 0.000000e+00, %bb65.preheader.i ], [ %172, %middle.block90 ], [ %222, %bb68.i ]
  %_232.not.i = icmp eq i64 %result.1, 0
  br i1 %_232.not.i, label %panic19.i, label %bb132.i, !prof !30

bb132.i:                                          ; preds = %bb67.i
  %194 = load float, ptr %result.0, align 4, !alias.scope !39, !noalias !36, !noundef !23
  %195 = fadd float %my_result0_real.0.lcssa.i, %194
  store float %195, ptr %result.0, align 4, !alias.scope !39, !noalias !36
  %_7.i75.i = getelementptr inbounds { float, float }, ptr %result.0, i64 0, i32 1
  %196 = load float, ptr %_7.i75.i, align 4, !alias.scope !44, !noalias !36, !noundef !23
  %197 = fadd float %my_result0_imag.0.lcssa.i, %196
  store float %197, ptr %_7.i75.i, align 4, !alias.scope !44, !noalias !36
  %_239.not.i = icmp eq i64 %result.1, 1
  br i1 %_239.not.i, label %panic20.i, label %bb135.i, !prof !30

panic19.i:                                        ; preds = %bb67.i
; call core::panicking::panic_bounds_check
  tail call void @core::panicking::panic_bounds_check(i64 noundef 0, i64 noundef 0, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_b12b3275f21b742348bd100d35d11d7b) #5, !noalias !37
  unreachable

bb135.i:                                          ; preds = %bb132.i
  %_237.i = getelementptr inbounds [0 x { float, float }], ptr %result.0, i64 0, i64 1
  %198 = load float, ptr %_237.i, align 4, !alias.scope !47, !noalias !36, !noundef !23
  %199 = fadd float %my_result1_real.0.lcssa.i, %198
  store float %199, ptr %_237.i, align 4, !alias.scope !47, !noalias !36
  %_7.i76.i = getelementptr inbounds [0 x { float, float }], ptr %result.0, i64 0, i64 1, i32 1
  %200 = load float, ptr %_7.i76.i, align 4, !alias.scope !52, !noalias !36, !noundef !23
  %201 = fadd float %my_result1_imag.0.lcssa.i, %200
  store float %201, ptr %_7.i76.i, align 4, !alias.scope !52, !noalias !36
  %_246.i = icmp ugt i64 %result.1, 2
  br i1 %_246.i, label %bb138.i, label %panic21.i, !prof !21

panic20.i:                                        ; preds = %bb132.i
; call core::panicking::panic_bounds_check
  tail call void @core::panicking::panic_bounds_check(i64 noundef 1, i64 noundef 1, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_9043e7b7724d113133a07f6b6337329f) #5, !noalias !37
  unreachable

bb138.i:                                          ; preds = %bb135.i
  %_244.i = getelementptr inbounds [0 x { float, float }], ptr %result.0, i64 0, i64 2
  %202 = load float, ptr %_244.i, align 4, !alias.scope !55, !noalias !36, !noundef !23
  %203 = fadd float %my_result2_real.0.lcssa.i, %202
  store float %203, ptr %_244.i, align 4, !alias.scope !55, !noalias !36
  %_7.i77.i = getelementptr inbounds [0 x { float, float }], ptr %result.0, i64 0, i64 2, i32 1
  %204 = load float, ptr %_7.i77.i, align 4, !alias.scope !60, !noalias !36, !noundef !23
  %205 = fadd float %my_result2_imag.0.lcssa.i, %204
  store float %205, ptr %_7.i77.i, align 4, !alias.scope !60, !noalias !36
  %_253.not.i = icmp eq i64 %result.1, 3
  br i1 %_253.not.i, label %panic22.i, label %bb141.i, !prof !30

panic21.i:                                        ; preds = %bb135.i
; call core::panicking::panic_bounds_check
  tail call void @core::panicking::panic_bounds_check(i64 noundef 2, i64 noundef 2, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_e0b6660055128ca0d240692ebe4537cc) #5, !noalias !37
  unreachable

bb141.i:                                          ; preds = %bb138.i
  %_251.i = getelementptr inbounds [0 x { float, float }], ptr %result.0, i64 0, i64 3
  %206 = load float, ptr %_251.i, align 4, !alias.scope !63, !noalias !36, !noundef !23
  %207 = fadd float %my_result3_real.0.lcssa.i, %206
  store float %207, ptr %_251.i, align 4, !alias.scope !63, !noalias !36
  %_7.i78.i = getelementptr inbounds [0 x { float, float }], ptr %result.0, i64 0, i64 3, i32 1
  br label %bempp_kernel::helmholtz_3d::evaluate_helmholtz_one_target.exit

panic22.i:                                        ; preds = %bb138.i
; call core::panicking::panic_bounds_check
  tail call void @core::panicking::panic_bounds_check(i64 noundef 3, i64 noundef 3, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_b447a9cde4c06f08ccc56b57057346b6) #5, !noalias !37
  unreachable

bb68.i:                                           ; preds = %bb68.i.preheader, %bb68.i
  %iter5.sroa.0.0170.i = phi i64 [ %_0.i74.i, %bb68.i ], [ %iter5.sroa.0.0170.i.ph, %bb68.i.preheader ]
  %my_result3_imag.0169.i = phi float [ %222, %bb68.i ], [ %my_result3_imag.0169.i.ph, %bb68.i.preheader ]
  %my_result2_imag.0168.i = phi float [ %220, %bb68.i ], [ %my_result2_imag.0168.i.ph, %bb68.i.preheader ]
  %my_result0_real.0167.i = phi float [ %215, %bb68.i ], [ %my_result0_real.0167.i.ph, %bb68.i.preheader ]
  %my_result1_real.0166.i = phi float [ %217, %bb68.i ], [ %my_result1_real.0166.i.ph, %bb68.i.preheader ]
  %my_result2_real.0165.i = phi float [ %219, %bb68.i ], [ %my_result2_real.0165.i.ph, %bb68.i.preheader ]
  %my_result3_real.0164.i = phi float [ %221, %bb68.i ], [ %my_result3_real.0164.i.ph, %bb68.i.preheader ]
  %my_result0_imag.0163.i = phi float [ %216, %bb68.i ], [ %my_result0_imag.0163.i.ph, %bb68.i.preheader ]
  %my_result1_imag.0162.i = phi float [ %218, %bb68.i ], [ %my_result1_imag.0162.i.ph, %bb68.i.preheader ]
  %_0.i74.i = add nuw nsw i64 %iter5.sroa.0.0170.i, 1
  %208 = getelementptr inbounds [0 x float], ptr %sources.0, i64 0, i64 %iter5.sroa.0.0170.i
  %_125.i = load float, ptr %208, align 4, !alias.scope !5, !noalias !24, !noundef !23
  %_0.i79.i = fsub float %_125.i, %_128.i
  %209 = getelementptr inbounds [0 x float], ptr %data.i.i, i64 0, i64 %iter5.sroa.0.0170.i
  %_132.i = load float, ptr %209, align 4, !alias.scope !5, !noalias !24, !noundef !23
  %_0.i80.i = fsub float %_132.i, %_135.i
  %210 = getelementptr inbounds [0 x float], ptr %data.i51.i, i64 0, i64 %iter5.sroa.0.0170.i
  %_139.i = load float, ptr %210, align 4, !alias.scope !5, !noalias !24, !noundef !23
  %_0.i81.i = fsub float %_139.i, %_142.i
  %_0.i82.i = fmul float %_0.i79.i, %_0.i79.i
  %_0.i83.i = fmul float %_0.i80.i, %_0.i80.i
  %_0.i84.i = fadd float %_0.i82.i, %_0.i83.i
  %_0.i85.i = fmul float %_0.i81.i, %_0.i81.i
  %_0.i86.i = fadd float %_0.i84.i, %_0.i85.i
  %211 = tail call float @llvm.sqrt.f32(float %_0.i86.i)
  %_0.i87.i = fcmp oeq float %211, 0.000000e+00
  %_0.i88.i = fdiv float 1.000000e+00, %211
  %inv_diff_norm7.0.i = select i1 %_0.i87.i, float 0.000000e+00, float %_0.i88.i
  %_0.i89.i = fmul float %inv_diff_norm7.0.i, %inv_diff_norm7.0.i
  %_0.i90.i = fmul float %211, %wavenumber
  %212 = tail call float @llvm.cos.f32(float %_0.i90.i)
  %_0.i91.i = fmul float %212, %inv_diff_norm7.0.i
  %_0.i92.i = fmul float %_0.i91.i, 0x3FB45F3060000000
  %213 = tail call float @llvm.sin.f32(float %_0.i90.i)
  %_0.i93.i = fmul float %213, %inv_diff_norm7.0.i
  %_0.i94.i = fmul float %_0.i93.i, 0x3FB45F3060000000
  %_0.i95.i = fmul float %_0.i90.i, %_0.i92.i
  %_0.i96.i = fsub float %_0.i94.i, %_0.i95.i
  %_0.i97.i = fmul float %_0.i89.i, %_0.i96.i
  %_0.i98.i = fmul float %_0.i90.i, %_0.i94.i
  %_0.i99.i = fadd float %_0.i92.i, %_0.i98.i
  %_0.i100.i = fmul float %_0.i89.i, %_0.i99.i
  %_182.i = getelementptr inbounds [0 x { float, float }], ptr %charges.0, i64 0, i64 %iter5.sroa.0.0170.i
  %_182.val.i = load float, ptr %_182.i, align 4, !alias.scope !7, !noalias !25, !noundef !23
  %214 = getelementptr i8, ptr %_182.i, i64 4
  %_182.val42.i = load float, ptr %214, align 4, !alias.scope !7, !noalias !25, !noundef !23
  %_0.i101.i = fmul float %_182.val42.i, %_0.i92.i
  %_0.i102.i = fmul float %_182.val.i, %_0.i94.i
  %_0.i103.i = fadd float %_0.i101.i, %_0.i102.i
  %215 = fadd float %my_result0_real.0167.i, %_0.i103.i
  %_0.i104.i = fmul float %_182.val.i, %_0.i92.i
  %_0.i105.i = fmul float %_182.val42.i, %_0.i94.i
  %_0.i106.i = fsub float %_0.i104.i, %_0.i105.i
  %216 = fadd float %my_result0_imag.0163.i, %_0.i106.i
  %_0.i107.i = fmul float %_182.val42.i, %_0.i97.i
  %_0.i108.i = fmul float %_182.val.i, %_0.i100.i
  %_0.i109.i = fadd float %_0.i107.i, %_0.i108.i
  %_0.i110.i = fmul float %_182.val.i, %_0.i97.i
  %_0.i111.i = fmul float %_182.val42.i, %_0.i100.i
  %_0.i112.i = fsub float %_0.i110.i, %_0.i111.i
  %_0.i113.i = fmul float %_0.i79.i, %_0.i109.i
  %217 = fadd float %my_result1_real.0166.i, %_0.i113.i
  %_0.i114.i = fmul float %_0.i79.i, %_0.i112.i
  %218 = fadd float %my_result1_imag.0162.i, %_0.i114.i
  %_0.i115.i = fmul float %_0.i80.i, %_0.i109.i
  %219 = fadd float %my_result2_real.0165.i, %_0.i115.i
  %_0.i116.i = fmul float %_0.i80.i, %_0.i112.i
  %220 = fadd float %my_result2_imag.0168.i, %_0.i116.i
  %_0.i117.i = fmul float %_0.i81.i, %_0.i109.i
  %221 = fadd float %my_result3_real.0164.i, %_0.i117.i
  %_0.i118.i = fmul float %_0.i81.i, %_0.i112.i
  %222 = fadd float %my_result3_imag.0169.i, %_0.i118.i
  %exitcond188.not.i = icmp eq i64 %_0.i74.i, %charges.1
  br i1 %exitcond188.not.i, label %bb67.i, label %bb68.i, !llvm.loop !68

panic25.i:                                        ; preds = %bb68.lr.ph.i
; call core::panicking::panic_bounds_check
  tail call void @core::panicking::panic_bounds_check(i64 noundef 0, i64 noundef 0, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_43db486531fb9f91c9f78a3c61d57c02) #5, !noalias !37
  unreachable

panic27.i:                                        ; preds = %bb68.lr.ph.i
; call core::panicking::panic_bounds_check
  tail call void @core::panicking::panic_bounds_check(i64 noundef 1, i64 noundef 1, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_93273f469d62cbb7f3a96157de2b78ab) #5, !noalias !37
  unreachable

panic29.i:                                        ; preds = %bb68.lr.ph.split.split.i
; call core::panicking::panic_bounds_check
  tail call void @core::panicking::panic_bounds_check(i64 noundef 2, i64 noundef 2, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @alloc_b4343505c8bd831c94fc5c3ebd5da820) #5, !noalias !37
  unreachable

bempp_kernel::helmholtz_3d::evaluate_helmholtz_one_target.exit: ; preds = %bb49.i, %bb141.i
  %_7.i78.sink199.i = phi ptr [ %_7.i78.i, %bb141.i ], [ %_7.i.i, %bb49.i ]
  %my_result3_imag.0.lcssa.sink.i = phi float [ %my_result3_imag.0.lcssa.i, %bb141.i ], [ %my_result_imag.0.lcssa.i, %bb49.i ]
  %223 = load float, ptr %_7.i78.sink199.i, align 4, !alias.scope !9, !noalias !36, !noundef !23
  %224 = fadd float %my_result3_imag.0.lcssa.sink.i, %223
  store float %224, ptr %_7.i78.sink199.i, align 4, !alias.scope !9, !noalias !36
  ret void
}
